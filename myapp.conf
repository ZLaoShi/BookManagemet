# /etc/nginx/conf.d/myapp.conf

server {
    listen 80; # 监听 HTTP 请求
    server_name your_local_domain.com localhost; # 可以是你想要的本地访问域名，记得配 hosts 文件或直接用 localhost

    # 默认 Nginx 日志位置，可以自定义
    access_log /var/log/nginx/myapp.access.log;
    error_log /var/log/nginx/myapp.error.log;

    # --- API 请求转发到后端 ---
    # 所有 /api/ 开头的请求都转发给后端容器
    location /api/ {
        # backend 是 docker-compose.yml 中定义的服务名
        # 8888 是后端容器暴露的端口 (在 docker-compose 文件中定义的容器端口)
        proxy_pass http://127.0.0.1:8888/graphql; # 因为 Compose 把 8888 映射到了宿主机

        # 或者，如果 backend 服务没有映射端口到宿主机，且 Nginx 和 Docker 容器在同一个网络 (复杂些)
        # proxy_pass http://<backend_container_ip>:8888/api/; # 不推荐直接用 IP

        # 推荐方式：让 Nginx 和 Docker Compose 服务都在同一个 Docker 网络
        # 或者，如当前配置，依赖 backend 服务映射的宿主机端口

        # 设置必要的代理头信息
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # (可选) 增加超时时间
        # proxy_connect_timeout 60s;
        # proxy_read_timeout 60s;
    }

    # --- 前端静态资源和 SPA 路由 ---
    # 其他所有请求都转发给前端容器
    location / {
        # frontend 是 docker-compose.yml 中定义的服务名
        # 8080 是我们上面 docker-compose.yml 中将前端容器 80 端口映射到的宿主机端口
        proxy_pass http://127.0.0.1:8080; # 转发给运行在 8080 端口的前端 Nginx 容器

        # 设置必要的代理头信息
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # (可选) 如果需要处理 WebSocket (例如 Vert.x EventBus bridge)
    # location /eventbus/ {
    #     proxy_pass http://127.0.0.1:8888/eventbus/; # 指向后端的 WebSocket 端点
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_set_header Host $host;
    # }
}
