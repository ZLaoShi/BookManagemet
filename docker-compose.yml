# my-graduation-project/docker-compose.yml

services:
  # --- 后端服务 ---
  backend:
    build: ./backend-app
    container_name: myapp-backend
    restart: unless-stopped
    environment:
      DB_URL: "jdbc:postgresql://db:5432/grad_project_db"
      DB_USER: "grad_user"
      DB_PASSWORD: "yoursecurepassword"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
    ports:
      - "8888:8888"
    networks:
      - app-network
    depends_on:
      - db
      - redis

  # --- 前端服务 ---
  frontend:
    build: ./frontend-app
    container_name: myapp-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    networks:
      - app-network

  # --- PostgreSQL 数据库服务 ---
  db:
    image: postgres:16-alpine
    container_name: myapp-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: "grad_project_db"
      POSTGRES_USER: "grad_user"
      POSTGRES_PASSWORD: "yoursecurepassword"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  # --- Redis 缓存服务 ---
  redis:
    image: redis:7-alpine
    container_name: myapp-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    networks:
      - app-network

  # --- InfluxDB 时序数据库服务 ---
  influxdb:
    image: influxdb:1.8 # 使用 v1.8 比较简单
    container_name: myapp-influxdb
    restart: unless-stopped
    ports:
      - "8086:8086" # InfluxDB API 端口
    volumes:
      - influxdb_data:/var/lib/influxdb # 数据持久化
    networks:
      - app-network

  # --- Telegraf 数据采集代理 ---
  telegraf:
    image: telegraf:latest
    container_name: myapp-telegraf
    restart: unless-stopped
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro # 挂载配置文件
    networks:
      - app-network
    depends_on: # 依赖 InfluxDB 和 Backend
      - influxdb
      - backend

  # --- Grafana 可视化服务 ---
  grafana:
    image: grafana/grafana:latest
    container_name: myapp-grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on: # 现在依赖 InfluxDB
      - influxdb

# --- 网络定义 ---
networks:
  app-network:
    driver: bridge

# --- 数据卷定义 ---
volumes:
  postgres_data:
  # prometheus_data: {} # 不再需要 Prometheus 数据卷
  influxdb_data: {}    # 添加 InfluxDB 数据卷
  grafana_data: {}